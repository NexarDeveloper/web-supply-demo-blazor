@page "/categories"
@inherits AbstractPage
@inject NexarClient Client

<MudText Typo="Typo.h4" GutterBottom="true">Categories</MudText>

@if (_treeItems is null)
{
    <MudProgressLinear Indeterminate=true />
}
else
{
    <MudTreeView T=ICategoryInfo Items="_treeItems">
        <ItemTemplate>
            <MudTreeViewItem Items="@context.Children" Value="@context.Value" Text="@context.Text" />
        </ItemTemplate>
    </MudTreeView>
}

@code {

    readonly List<MyTreeItemData> _treeItems = new();

    public class MyTreeItemData : TreeItemData<ICategoryInfo>
    {
        public MyTreeItemData(ICategoryInfo value) : base(value)
        {
            Text = value.Name;
            Children = [];
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var res = await Client.CategoryTrees.ExecuteAsync();
            var data = res.AssertNoErrors();

            foreach (var cat1 in data.SupCategories)
            {
                if (cat1.ParentId != "4161")
                    continue;

                var item1 = new MyTreeItemData(cat1);
                _treeItems.Add(item1);
                foreach (var cat2 in cat1.Children)
                {
                    var item2 = new MyTreeItemData(cat2);
                    item1.Children!.Add(item2);
                    foreach (var cat3 in cat2.Children)
                    {
                        var item3 = new MyTreeItemData(cat3);
                        item2.Children!.Add(item3);
                    }
                }
            }
        }
        catch (Exception ex)
        {
            await ShowErrorAndResetAsync(ex.Message);
        }
    }
}
